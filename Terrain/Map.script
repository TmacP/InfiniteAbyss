local debugMode = false

if debugMode then print("Map Debug") end

-- Load tile source and set it to a tile map
go.property("my_tile_source", resource.tile_source("/Terrain/Level.tilesource"))

function init(self)
	if debugMode then print(("Tile Source Path: %s"):format(self.my_tile_source)) end
	go.set("#Level", "tile_source", self.my_tile_source)

	-- Assuming the tilemap is named "Level"
	local url = "#Level"

	-- Get the bounds of the tilemap
	local tilemap = tilemap  -- Add this line
	local x, y, width, height = tilemap.get_bounds(url)

	-- Print the bounds
	if debugMode then print(("Tilemap Bounds - X: %d, Y: %d, Width: %d, Height: %d"):format(x, y, width, height)) end

	-- get the tile nu.
	local tileno = tilemap.get_tile(url, "layer1", x, y)
	if debugMode then print(("Get tile - , tileno: %d"):format(tileno)) end

	-- set the tile to that num
	tilemap.set_tile(url,"layer1",x,y,1)

	--[[ Set all tiles to a specific tile index (1 in this case)
	for i = x, x + width - 1 do
		for j = y, y + height - 1 do
			tilemap.set_tile(url, "layer1", i, j, 1)
		end
	end--]]
end
